<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
    <rewrite>
      <rules>
        <!-- All other URLs are mapped to the Node.js application entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="app/server/dist/index.js"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />

    <!-- You can control how Node.js is hosted within IIS using the following options:
         * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
         * node_env: will be propagated to node as NODE_ENV environment variable
         * debuggingEnabled - controls whether the built-in debugger is enabled
    -->
    <iisnode watchedFiles="web.config;*.js"
             node_env="%node_env%"
             debuggingEnabled="false" />
  </system.webServer>
</configuration>
